import{_ as e,c as t,o as s,a5 as a}from"./chunks/framework.-Zveb6AF.js";const g=JSON.parse('{"title":"Test Transactions","description":"","frontmatter":{},"headers":[],"relativePath":"developer/tutorials/test-transactions.md","filePath":"developer/tutorials/test-transactions.md","lastUpdated":1723651250000}'),i={name:"developer/tutorials/test-transactions.md"},n=a(`<h1 id="test-transactions" tabindex="-1">Test Transactions <a class="header-anchor" href="#test-transactions" aria-label="Permalink to &quot;Test Transactions&quot;">​</a></h1><h2 id="configure-the-testing-script" tabindex="-1">Configure the Testing Script <a class="header-anchor" href="#configure-the-testing-script" aria-label="Permalink to &quot;Configure the Testing Script&quot;">​</a></h2><p>To run the test transactions script you will need <code>Foundry</code>:</p><ul><li>Foundry: <a href="https://book.getfoundry.sh/getting-started/installation" target="_blank" rel="noreferrer">https://book.getfoundry.sh/getting-started/installation</a></li></ul><p>In a new terminal window, clone and configure the evm test transactions repo:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --recurse-submodules</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> git@github.com:astriaorg/astria-web3.git</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> astria-web3</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> checkout</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> local-evm</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> packages/evm-test-data/</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">forge</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cp</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .env.example</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .env</span></span></code></pre></div><p>Open the <code>.env</code> file and update the chain id and private key. The chain id should match the <code>&quot;chainId&quot;</code> value in the <code>geth-genesis-local.json</code> file in the <code>astria-geth</code> repo. The private key used here should be the private key for the account you used when <a href="./run-local-rollup-and-sequencer#setup-a-geth-rollup">setting up Geth</a> previously:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># this value should be the same as what you used for configuring Geth above</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">CHAIN_ID</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">6</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> digit</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> numbe</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">r</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">PRIVATE_KEY</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">your</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> evm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> account</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> private</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ke</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">y</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><h2 id="run-the-testing-script" tabindex="-1">Run the Testing Script <a class="header-anchor" href="#run-the-testing-script" aria-label="Permalink to &quot;Run the Testing Script&quot;">​</a></h2><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">just</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> generate-transactions</span></span></code></pre></div><p>You will see the transactions going through in both the <code>forge</code> script and the log windows in the <code>astria-go</code> cli.</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>The test script sends transactions directly to the local rollup running on your machine. Thus, the transactions will work regardless of whether you are running everything locally with <code>astria-go dev run --network local</code> or if you are running against a remote sequencer with <code>astria-go dev run --network dusk</code>.</p></div><h2 id="common-issues" tabindex="-1">Common Issues <a class="header-anchor" href="#common-issues" aria-label="Permalink to &quot;Common Issues&quot;">​</a></h2><h3 id="evmerror-outoffunds" tabindex="-1"><code>EvmError: OutOfFunds</code> <a class="header-anchor" href="#evmerror-outoffunds" aria-label="Permalink to &quot;\`EvmError: OutOfFunds\`&quot;">​</a></h3><p>If you see a an <code>OutOfFunds</code> error when running the testing script, this means that your rollup genesis account was not configured correctly. To fix this issue:</p><ol><li>Go back to the <code>astria-geth</code> repo.</li><li>Run <code>cast w new</code> to create a new rollup account.</li><li>Add the new address to the <code>geth-genesis-local.json</code> under <code>&quot;alloc&quot;</code>.</li><li>Restart your rollup with <code>just clean-restart</code>.</li><li>Update the <code>PRIVATE_KEY</code> env var in the test transactions repo with the private key from the new account.</li><li>Rerun the testing script.</li></ol><h3 id="test-script-hangs" tabindex="-1">Test script hangs <a class="header-anchor" href="#test-script-hangs" aria-label="Permalink to &quot;Test script hangs&quot;">​</a></h3><p>If you are running against a remote sequencer and the transactions test script hangs, navigate to the cli TUI and look at the logs for the Composer. You will likely see an error that contains <code>sequencer rejected the transaction ... insufficient funds for asset</code>. This means that the sequencer account that was created was either improperly configure or not funded correctly. To fix this issue:</p><ol><li>Stop the <code>astria-go</code> cli.</li><li>Create a new sequencer account with <code>astria-go sequencer createaccount</code> or use an existing account if you already have one for testing, and fund the account using the <a href="https://faucet.sequencer.dusk-8.devnet.astria.org/" target="_blank" rel="noreferrer">Sequencer Faucet</a>.</li><li>Make sure the <code>astria_composer_private_key</code> variable in the <code>~/.astria/default/config/base-config.toml</code> is set to the private key for your funded sequencer account.</li><li>Re-launch the cli with <code>astria-go dev run --network dusk</code>.</li><li>Rerun the transactions testing script.</li></ol><h3 id="chain-data-mismatch" tabindex="-1">Chain Data Mismatch <a class="header-anchor" href="#chain-data-mismatch" aria-label="Permalink to &quot;Chain Data Mismatch&quot;">​</a></h3><p>If you start seeing warning in Composer that say <code>failed getting latest nonce from sequencer</code> or errors in Conductor that say <code>first latest height from sequencer was bad</code>, this likely means that block data on your rollup and the block data coming from whatever sequencer you are using (either local or remote) are mismatched. To fix this issue:</p><ol><li>Stop your rollup and the cli.</li><li>Restart the rollup with <code>just clean-restart</code> and restart the cli with the run conditions you were using.</li></ol><p>This will clean the data your rollup and allow it to resync.</p><p>If issues still persist, you can clean the data for the rollup and the sequencer (if you are running a local sequencer):</p><ol><li>Stop your rollup and the cli.</li><li>With the cli run <code>astria-go dev clean</code> then <code>astria-go dev init</code>.</li><li>Restart the rollup with <code>just clean-restart</code>.</li><li>Restart the cli with <code>astria-go dev run</code>.</li></ol>`,25),o=[n];function r(l,h,c,d,p,u){return s(),t("div",null,o)}const y=e(i,[["render",r]]);export{g as __pageData,y as default};
