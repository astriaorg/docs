import{_ as t,c as a,a3 as s,o as d}from"./chunks/framework.ohJJpums.js";const u=JSON.parse('{"title":"astria-go cli Commands","description":"","frontmatter":{},"headers":[],"relativePath":"developer/astria-go/astria-go-commands.md","filePath":"developer/astria-go/astria-go-commands.md","lastUpdated":1734135166000}'),i={name:"developer/astria-go/astria-go-commands.md"};function o(n,e,r,h,l,c){return d(),a("div",null,e[0]||(e[0]=[s('<h1 id="astria-go-cli-commands" tabindex="-1"><code>astria-go</code> cli Commands <a class="header-anchor" href="#astria-go-cli-commands" aria-label="Permalink to &quot;`astria-go` cli Commands&quot;">​</a></h1><h2 id="global-flags" tabindex="-1">Global Flags <a class="header-anchor" href="#global-flags" aria-label="Permalink to &quot;Global Flags&quot;">​</a></h2><p>Flags that can be used on any command in the cli.</p><table tabindex="0"><thead><tr><th>Flag</th><th>Arg Type</th><th>Override Env Var</th><th>Description</th></tr></thead><tbody><tr><td><code>-h</code>, <code>--help</code></td><td>bool</td><td>None</td><td>Display the help information for a given command</td></tr><tr><td><code>--log-level</code></td><td>string</td><td><code>ASTRIA_GO_LOG_LEVEL</code></td><td>Set the log level for the cli.</td></tr></tbody></table><h2 id="help" tabindex="-1"><code>help</code> <a class="header-anchor" href="#help" aria-label="Permalink to &quot;`help`&quot;">​</a></h2><p>Print the help information for the given command.</p><h3 id="usage" tabindex="-1">Usage <a class="header-anchor" href="#usage" aria-label="Permalink to &quot;Usage&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">astria-go</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> help</span></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># or</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">astria-go</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [command] help</span></span></code></pre></div><h2 id="version" tabindex="-1"><code>version</code> <a class="header-anchor" href="#version" aria-label="Permalink to &quot;`version`&quot;">​</a></h2><p>Prints the version of the cli.</p><h3 id="usage-1" tabindex="-1">Usage <a class="header-anchor" href="#usage-1" aria-label="Permalink to &quot;Usage&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">astria-go</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> version</span></span></code></pre></div><h2 id="dev" tabindex="-1"><code>dev</code> <a class="header-anchor" href="#dev" aria-label="Permalink to &quot;`dev`&quot;">​</a></h2><p>The root command for all development commands.</p><h3 id="usage-2" tabindex="-1">Usage <a class="header-anchor" href="#usage-2" aria-label="Permalink to &quot;Usage&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">astria-go</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dev</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [command] [flags]</span></span></code></pre></div><h2 id="dev-init" tabindex="-1"><code>dev init</code> <a class="header-anchor" href="#dev-init" aria-label="Permalink to &quot;`dev init`&quot;">​</a></h2><p>Downloads service binaries and initializes the local environment. This command must be run before the <code>dev run</code> command can be used.</p><h3 id="usage-3" tabindex="-1">Usage <a class="header-anchor" href="#usage-3" aria-label="Permalink to &quot;Usage&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">astria-go</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dev</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> init</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [flags]</span></span></code></pre></div><h3 id="flags" tabindex="-1">Flags <a class="header-anchor" href="#flags" aria-label="Permalink to &quot;Flags&quot;">​</a></h3><table tabindex="0"><thead><tr><th>Flag</th><th>Arg Type</th><th>Override Env Var</th><th>Description</th></tr></thead><tbody><tr><td><code>--instance</code></td><td>string</td><td><code>ASTRIA_GO_INSTANCE</code></td><td>Choose the target instance. (default &quot;default&quot;)</td></tr><tr><td><code>--local-native-denom</code></td><td>string</td><td><code>ASTRIA_GO_LOCAL_NATIVE_DENOM</code></td><td>Set the native denom for the local instance. This is used to set the &#39;native_asset_base_denomination&#39; and &#39;allowed_fee_assets&#39; in the CometBFT genesis.json file. (default &quot;ntia&quot;)</td></tr><tr><td><code>--local-network-name</code></td><td>string</td><td><code>ASTRIA_GO_LOCAL_NETWORK_NAME</code></td><td>Set the local network name for the instance. This is used to set the chain ID in the CometBFT genesis.json file. (default &quot;sequencer-test-chain-0&quot;)</td></tr></tbody></table><h2 id="dev-purge" tabindex="-1"><code>dev purge</code> <a class="header-anchor" href="#dev-purge" aria-label="Permalink to &quot;`dev purge`&quot;">​</a></h2><p>The root command for all purge commands.</p><h3 id="usage-4" tabindex="-1">Usage <a class="header-anchor" href="#usage-4" aria-label="Permalink to &quot;Usage&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">astria-go</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dev</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> purge</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [command] [flags]</span></span></code></pre></div><h2 id="dev-purge-all" tabindex="-1"><code>dev purge all</code> <a class="header-anchor" href="#dev-purge-all" aria-label="Permalink to &quot;`dev purge all`&quot;">​</a></h2><p>Delete all data for a given instance. This deletes the entire instance directory within <code>~/.astria</code>. <code>astria-go dev init</code> must be run before <code>astria-go dev run</code> can be used.</p><h3 id="usage-5" tabindex="-1">Usage <a class="header-anchor" href="#usage-5" aria-label="Permalink to &quot;Usage&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">astria-go</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dev</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> purge</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> all</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [flags]</span></span></code></pre></div><h3 id="flags-1" tabindex="-1">Flags <a class="header-anchor" href="#flags-1" aria-label="Permalink to &quot;Flags&quot;">​</a></h3><table tabindex="0"><thead><tr><th>Flag</th><th>Arg Type</th><th>Override Env Var</th><th>Description</th></tr></thead><tbody><tr><td><code>--instance</code></td><td>string</td><td><code>ASTRIA_GO_INSTANCE</code></td><td>Choose the target instance. (default &quot;default&quot;)</td></tr></tbody></table><h2 id="dev-purge-binaries" tabindex="-1"><code>dev purge binaries</code> <a class="header-anchor" href="#dev-purge-binaries" aria-label="Permalink to &quot;`dev purge binaries`&quot;">​</a></h2><p>Delete all downloaded binaries for a given instance. <code>astria-go dev init</code> must be run before <code>astria-go dev run</code> can be used.</p><h3 id="usage-6" tabindex="-1">Usage <a class="header-anchor" href="#usage-6" aria-label="Permalink to &quot;Usage&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">astria-go</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dev</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> purge</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> binaries</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [flags]</span></span></code></pre></div><h3 id="flags-2" tabindex="-1">Flags <a class="header-anchor" href="#flags-2" aria-label="Permalink to &quot;Flags&quot;">​</a></h3><table tabindex="0"><thead><tr><th>Flag</th><th>Arg Type</th><th>Override Env Var</th><th>Description</th></tr></thead><tbody><tr><td><code>--instance</code></td><td>string</td><td><code>ASTRIA_GO_INSTANCE</code></td><td>Choose the target instance. (default &quot;default&quot;)</td></tr></tbody></table><h2 id="dev-purge-logs" tabindex="-1"><code>dev purge logs</code> <a class="header-anchor" href="#dev-purge-logs" aria-label="Permalink to &quot;`dev purge logs`&quot;">​</a></h2><p>Delete all logs for a given instance. This deletes all data in the <code>~/.astria/logs</code> directory. Re-initializing is NOT required after using this command.</p><h3 id="usage-7" tabindex="-1">Usage <a class="header-anchor" href="#usage-7" aria-label="Permalink to &quot;Usage&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">astria-go</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dev</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> purge</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> logs</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [flags]</span></span></code></pre></div><h2 id="dev-reset" tabindex="-1"><code>dev reset</code> <a class="header-anchor" href="#dev-reset" aria-label="Permalink to &quot;`dev reset`&quot;">​</a></h2><p>The root command for resetting the local development instance data.</p><h3 id="usage-8" tabindex="-1">Usage <a class="header-anchor" href="#usage-8" aria-label="Permalink to &quot;Usage&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">astria-go</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dev</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> reset</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [command] [flags]</span></span></code></pre></div><h2 id="dev-reset-config" tabindex="-1"><code>dev reset config</code> <a class="header-anchor" href="#dev-reset-config" aria-label="Permalink to &quot;`dev reset config`&quot;">​</a></h2><p>Reset config files. This will return all files in the instance config directory to their default state as though initially created.</p><h3 id="usage-9" tabindex="-1">Usage <a class="header-anchor" href="#usage-9" aria-label="Permalink to &quot;Usage&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">astria-go</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dev</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> reset</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [flags]</span></span></code></pre></div><h3 id="flags-3" tabindex="-1">Flags <a class="header-anchor" href="#flags-3" aria-label="Permalink to &quot;Flags&quot;">​</a></h3><table tabindex="0"><thead><tr><th>Flag</th><th>Arg Type</th><th>Override Env Var</th><th>Description</th></tr></thead><tbody><tr><td><code>--instance</code></td><td>string</td><td><code>ASTRIA_GO_INSTANCE</code></td><td>Choose the target instance. (default &quot;default&quot;)</td></tr><tr><td><code>--local-native-denom</code></td><td>string</td><td><code>ASTRIA_GO_LOCAL_NATIVE_DENOM</code></td><td>Set the native denom for the local instance. This is used to set the &#39;native_asset_base_denomination&#39; and &#39;allowed_fee_assets&#39; in the CometBFT genesis.json file. (default &quot;ntia&quot;)</td></tr><tr><td><code>--local-network-name</code></td><td>string</td><td><code>ASTRIA_GO_LOCAL_NETWORK_NAME</code></td><td>Set the local network name for the instance. This is used to set the chain ID in the CometBFT genesis.json file. (default &quot;sequencer-test-chain-0&quot;)</td></tr></tbody></table><h2 id="dev-reset-networks" tabindex="-1"><code>dev reset networks</code> <a class="header-anchor" href="#dev-reset-networks" aria-label="Permalink to &quot;`dev reset networks`&quot;">​</a></h2><p>Reset the networks config for the cli. This command only resets the networks-config.toml file for the instance. No other config files are affected.</p><h3 id="usage-10" tabindex="-1">Usage <a class="header-anchor" href="#usage-10" aria-label="Permalink to &quot;Usage&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">astria-go</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dev</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> reset</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> networks</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [flags]</span></span></code></pre></div><h3 id="flags-4" tabindex="-1">Flags <a class="header-anchor" href="#flags-4" aria-label="Permalink to &quot;Flags&quot;">​</a></h3><table tabindex="0"><thead><tr><th>Flag</th><th>Arg Type</th><th>Override Env Var</th><th>Description</th></tr></thead><tbody><tr><td><code>--instance</code></td><td>string</td><td><code>ASTRIA_GO_INSTANCE</code></td><td>Choose the target instance. (default &quot;default&quot;)</td></tr><tr><td><code>--local-native-denom</code></td><td>string</td><td><code>ASTRIA_GO_LOCAL_NATIVE_DENOM</code></td><td>Set the native denom for the local instance. This is used to set the &#39;native_asset_base_denomination&#39; and &#39;allowed_fee_assets&#39; in the CometBFT genesis.json file. (default &quot;ntia&quot;)</td></tr><tr><td><code>--local-network-name</code></td><td>string</td><td><code>ASTRIA_GO_LOCAL_NETWORK_NAME</code></td><td>Set the local network name for the instance. This is used to set the chain ID in the CometBFT genesis.json file. (default &quot;sequencer-test-chain-0&quot;)</td></tr></tbody></table><h2 id="dev-reset-state" tabindex="-1"><code>dev reset state</code> <a class="header-anchor" href="#dev-reset-state" aria-label="Permalink to &quot;`dev reset state`&quot;">​</a></h2><p>Reset Sequencer state. This will reset both the sequencer and Cometbft data to their initial state.</p><h3 id="usage-11" tabindex="-1">Usage <a class="header-anchor" href="#usage-11" aria-label="Permalink to &quot;Usage&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">astria-go</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dev</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> reset</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> state</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [flags]</span></span></code></pre></div><h3 id="flags-5" tabindex="-1">Flags <a class="header-anchor" href="#flags-5" aria-label="Permalink to &quot;Flags&quot;">​</a></h3><table tabindex="0"><thead><tr><th>Flag</th><th>Arg Type</th><th>Override Env Var</th><th>Description</th></tr></thead><tbody><tr><td><code>--instance</code></td><td>string</td><td><code>ASTRIA_GO_INSTANCE</code></td><td>Choose the target instance. (default &quot;default&quot;)</td></tr></tbody></table><h2 id="dev-run" tabindex="-1"><code>dev run</code> <a class="header-anchor" href="#dev-run" aria-label="Permalink to &quot;`dev run`&quot;">​</a></h2><p>Runs a minimal, local Astria stack. You can choose to run a local sequencer stack or target a remote network by using the <code>--network</code> flag.</p><h3 id="usage-12" tabindex="-1">Usage <a class="header-anchor" href="#usage-12" aria-label="Permalink to &quot;Usage&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># run a local sequencer</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">astria-go</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dev</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [flags]</span></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># run a local sequencer</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">astria-go</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dev</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --network</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> local</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [flags]</span></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># run against a remote dev net</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">astria-go</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dev</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --network</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dusk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [flags]</span></span></code></pre></div><h3 id="flags-6" tabindex="-1">Flags <a class="header-anchor" href="#flags-6" aria-label="Permalink to &quot;Flags&quot;">​</a></h3><table tabindex="0"><thead><tr><th>Flag</th><th>Arg Type</th><th>Override Env Var</th><th>Description</th></tr></thead><tbody><tr><td><code>--instance</code></td><td>string</td><td><code>ASTRIA_GO_INSTANCE</code></td><td>Choose the target instance. (default &quot;default&quot;)</td></tr><tr><td><code>--network</code></td><td>string</td><td><code>ASTRIA_GO_NETWORK</code></td><td>Select the network to run the services against. Valid networks are: local, dusk, dawn, mainnet (default &quot;dawn&quot;)</td></tr><tr><td><code>--cometbft-path</code></td><td>string</td><td><code>ASTRIA_GO_COMETBFT_PATH</code></td><td>Provide an override path to a specific cometbft binary.</td></tr><tr><td><code>--composer-path</code></td><td>string</td><td><code>ASTRIA_GO_COMPOSER_PATH</code></td><td>Provide an override path to a specific composer binary.</td></tr><tr><td><code>--conductor-path</code></td><td>string</td><td><code>ASTRIA_GO_CONDUCTOR_PATH</code></td><td>Provide an override path to a specific conductor binary.</td></tr><tr><td><code>--sequencer-path</code></td><td>string</td><td><code>ASTRIA_GO_SEQUENCER_PATH</code></td><td>Provide an override path to a specific sequencer binary.</td></tr><tr><td><code>--service-log-level</code></td><td>string</td><td><code>ASTRIA_GO_SERVICE_LOG_LEVEL</code></td><td>Set the log level for services (debug, info, error) (default &quot;info&quot;)</td></tr></tbody></table><h2 id="sequencer" tabindex="-1"><code>sequencer</code> <a class="header-anchor" href="#sequencer" aria-label="Permalink to &quot;`sequencer`&quot;">​</a></h2><p>The root command for all sequencer commands.</p><h3 id="usage-13" tabindex="-1">Usage <a class="header-anchor" href="#usage-13" aria-label="Permalink to &quot;Usage&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">astria-go</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sequencer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [command] [flags]</span></span></code></pre></div><h2 id="sequencer-balances" tabindex="-1"><code>sequencer balances</code> <a class="header-anchor" href="#sequencer-balances" aria-label="Permalink to &quot;`sequencer balances`&quot;">​</a></h2><p>Get the balances of an account on the Sequencer.</p><h3 id="usage-14" tabindex="-1">Usage <a class="header-anchor" href="#usage-14" aria-label="Permalink to &quot;Usage&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">astria-go</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sequencer</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> balance</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [address] [flags]</span></span></code></pre></div><h3 id="flags-7" tabindex="-1">Flags <a class="header-anchor" href="#flags-7" aria-label="Permalink to &quot;Flags&quot;">​</a></h3><table tabindex="0"><thead><tr><th>Flag</th><th>Arg Type</th><th>Override Env Var</th><th>Description</th></tr></thead><tbody><tr><td><code>--json</code></td><td>bool</td><td><code>ASTRIA_GO_JSON</code></td><td>Output an account&#39;s balances in JSON format.</td></tr><tr><td><code>--network</code></td><td>string</td><td><code>ASTRIA_GO_NETWORK</code></td><td>Configure the values to target a specific network. (default &quot;dawn&quot;)</td></tr><tr><td><code>-u</code>, <code>--sequencer-url</code></td><td>string</td><td><code>ASTRIA_GO_SEQUENCER_URL</code></td><td>The URL of the sequencer to retrieve the balance from.</td></tr></tbody></table><h2 id="sequencer-block" tabindex="-1"><code>sequencer block</code> <a class="header-anchor" href="#sequencer-block" aria-label="Permalink to &quot;`sequencer block`&quot;">​</a></h2><p>Get sequencer block at specified height.</p><h3 id="usage-15" tabindex="-1">Usage <a class="header-anchor" href="#usage-15" aria-label="Permalink to &quot;Usage&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">astria-go</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sequencer</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> block</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [height] [flags]</span></span></code></pre></div><h3 id="flags-8" tabindex="-1">Flags <a class="header-anchor" href="#flags-8" aria-label="Permalink to &quot;Flags&quot;">​</a></h3><table tabindex="0"><thead><tr><th>Flag</th><th>Arg Type</th><th>Override Env Var</th><th>Description</th></tr></thead><tbody><tr><td><code>--json</code></td><td>bool</td><td><code>ASTRIA_GO_JSON</code></td><td>Output an account&#39;s balances in JSON format.</td></tr><tr><td><code>--network</code></td><td>string</td><td><code>ASTRIA_GO_NETWORK</code></td><td>Configure the values to target a specific network. (default &quot;dawn&quot;)</td></tr><tr><td><code>-u</code>, <code>--sequencer-url</code></td><td>string</td><td><code>ASTRIA_GO_SEQUENCER_URL</code></td><td>The URL of the sequencer to retrieve the balance from.</td></tr></tbody></table><h2 id="sequencer-blockheight" tabindex="-1"><code>sequencer blockheight</code> <a class="header-anchor" href="#sequencer-blockheight" aria-label="Permalink to &quot;`sequencer blockheight`&quot;">​</a></h2><p>Get the current block height of the Sequencer.</p><h3 id="usage-16" tabindex="-1">Usage <a class="header-anchor" href="#usage-16" aria-label="Permalink to &quot;Usage&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">astria-go</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sequencer</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> blockheight</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [flags]</span></span></code></pre></div><h3 id="flags-9" tabindex="-1">Flags <a class="header-anchor" href="#flags-9" aria-label="Permalink to &quot;Flags&quot;">​</a></h3><table tabindex="0"><thead><tr><th>Flag</th><th>Arg Type</th><th>Override Env Var</th><th>Description</th></tr></thead><tbody><tr><td><code>--json</code></td><td>bool</td><td><code>ASTRIA_GO_JSON</code></td><td>Output an account&#39;s balances in JSON format.</td></tr><tr><td><code>--network</code></td><td>string</td><td><code>ASTRIA_GO_NETWORK</code></td><td>Configure the values to target a specific network. (default &quot;dawn&quot;)</td></tr><tr><td><code>-u</code>, <code>--sequencer-url</code></td><td>string</td><td><code>ASTRIA_GO_SEQUENCER_URL</code></td><td>The URL of the sequencer to retrieve the balance from.</td></tr></tbody></table><h2 id="sequencer-bridge" tabindex="-1"><code>sequencer bridge</code> <a class="header-anchor" href="#sequencer-bridge" aria-label="Permalink to &quot;`sequencer bridge`&quot;">​</a></h2><p>The root command for the sequencer bridge commands.</p><h3 id="usage-17" tabindex="-1">Usage <a class="header-anchor" href="#usage-17" aria-label="Permalink to &quot;Usage&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">astria-go</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sequencer</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> bridge</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [command]</span></span></code></pre></div><h2 id="sequencer-bridge-init" tabindex="-1"><code>sequencer bridge init</code> <a class="header-anchor" href="#sequencer-bridge-init" aria-label="Permalink to &quot;`sequencer bridge init`&quot;">​</a></h2><p>Initialize a bridge account.</p><h3 id="usage-18" tabindex="-1">Usage <a class="header-anchor" href="#usage-18" aria-label="Permalink to &quot;Usage&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">astria-go</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sequencer</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> bridge</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> init</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [rollup-id] [flags]</span></span></code></pre></div><h3 id="flags-10" tabindex="-1">Flags <a class="header-anchor" href="#flags-10" aria-label="Permalink to &quot;Flags&quot;">​</a></h3><table tabindex="0"><thead><tr><th>Flag</th><th>Arg Type</th><th>Override Env Var</th><th>Description</th></tr></thead><tbody><tr><td><code>--asset</code></td><td>string</td><td><code>ASTRIA_GO_ASSET_ID</code></td><td>The asset id of the asset we want to bridge (default &quot;transfer/channel-0/utia&quot;)</td></tr><tr><td><code>--async</code></td><td>bool</td><td><code>ASTRIA_GO_ASYNC</code></td><td>If true, the function will return immediately. If false, the function will wait for the transaction to be seen on the network.</td></tr><tr><td><code>--fee-asset</code></td><td>string</td><td><code>ASTRIA_GO_FEE_ASSET_ID</code></td><td>The fee asset id of the asset used for fees (default &quot;ntia&quot;)</td></tr><tr><td><code>--json</code></td><td>bool</td><td><code>ASTRIA_GO_JSON</code></td><td>Output bridge account as JSON</td></tr><tr><td><code>--keyfile</code></td><td>string</td><td><code>ASTRIA_GO_KEYFILE</code></td><td>Path to secure keyfile for the bridge account.</td></tr><tr><td><code>--keyring-address</code></td><td>string</td><td><code>ASTRIA_GO_KEYRING_ADDRESS</code></td><td>The address of the bridge account. Requires private key be stored in keyring.</td></tr><tr><td><code>--network</code></td><td>string</td><td><code>ASTRIA_GO_NETWORK</code></td><td>Configure the values to target a specific network. (default &quot;dawn&quot;)</td></tr><tr><td><code>--privkey</code></td><td>string</td><td><code>ASTRIA_GO_PRIVKEY</code></td><td>The private key of the bridge account.</td></tr><tr><td><code>-c</code>, <code>--sequencer-chain-id</code></td><td>string</td><td><code>ASTRIA_GO_SEQUENCER_CHAIN_ID</code></td><td>The chain ID of the sequencer. (default &quot;dawn-1&quot;)</td></tr><tr><td><code>-u</code>, <code>--sequencer-url</code></td><td>string</td><td><code>ASTRIA_GO_SEQUENCER_URL</code></td><td>The URL of the sequencer to init bridge account.</td></tr><tr><td><code>--sudo-address</code></td><td>string</td><td><code>ASTRIA_GO_SUDO_ADDRESS</code></td><td>Set the sudo address to use for the bridge account. The address of the sender is used if this is not set.</td></tr><tr><td><code>--withdrawer-address</code></td><td>string</td><td><code>ASTRIA_GO_WITHDRAWER_ADDRESS</code></td><td>Set the withdrawer address to use for the bridge account. The address of the sender is used if this is not set.</td></tr></tbody></table><h2 id="sequencer-bridge-lock" tabindex="-1"><code>sequencer bridge lock</code> <a class="header-anchor" href="#sequencer-bridge-lock" aria-label="Permalink to &quot;`sequencer bridge lock`&quot;">​</a></h2><p>Locks tokens on the bridge account.</p><h3 id="usage-19" tabindex="-1">Usage <a class="header-anchor" href="#usage-19" aria-label="Permalink to &quot;Usage&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">astria-go</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sequencer</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> bridge</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> lock</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [address] [amount] [destination-chain-address] [flags]</span></span></code></pre></div><h3 id="flags-11" tabindex="-1">Flags <a class="header-anchor" href="#flags-11" aria-label="Permalink to &quot;Flags&quot;">​</a></h3><table tabindex="0"><thead><tr><th>Flag</th><th>Arg Type</th><th>Override Env Var</th><th>Description</th></tr></thead><tbody><tr><td><code>--asset</code></td><td>string</td><td><code>ASTRIA_GO_ASSET_ID</code></td><td>The asset id of the asset we want to bridge (default &quot;transfer/channel-0/utia&quot;)</td></tr><tr><td><code>--async</code></td><td>bool</td><td><code>ASTRIA_GO_ASYNC</code></td><td>If true, the function will return immediately. If false, the function will wait for the transaction to be seen on the network.</td></tr><tr><td><code>--fee-asset</code></td><td>string</td><td><code>ASTRIA_GO_FEE_ASSET_ID</code></td><td>The fee asset id of the asset used for fees (default &quot;ntia&quot;)</td></tr><tr><td><code>--json</code></td><td>bool</td><td><code>ASTRIA_GO_JSON</code></td><td>Output bridge account as JSON</td></tr><tr><td><code>--keyfile</code></td><td>string</td><td><code>ASTRIA_GO_KEYFILE</code></td><td>Path to secure keyfile for the bridge account.</td></tr><tr><td><code>--keyring-address</code></td><td>string</td><td><code>ASTRIA_GO_KEYRING_ADDRESS</code></td><td>The address of the bridge account. Requires private key be stored in keyring.</td></tr><tr><td><code>--network</code></td><td>string</td><td><code>ASTRIA_GO_NETWORK</code></td><td>Configure the values to target a specific network. (default &quot;dawn&quot;)</td></tr><tr><td><code>--privkey</code></td><td>string</td><td><code>ASTRIA_GO_PRIVKEY</code></td><td>The private key of the bridge account.</td></tr><tr><td><code>-c</code>, <code>--sequencer-chain-id</code></td><td>string</td><td><code>ASTRIA_GO_SEQUENCER_CHAIN_ID</code></td><td>The chain ID of the sequencer. (default &quot;dawn-1&quot;)</td></tr><tr><td><code>-u</code>, <code>--sequencer-url</code></td><td>string</td><td><code>ASTRIA_GO_SEQUENCER_URL</code></td><td>The URL of the sequencer to init bridge account.</td></tr><tr><td><code>--sudo-address</code></td><td>string</td><td><code>ASTRIA_GO_SUDO_ADDRESS</code></td><td>Set the sudo address to use for the bridge account. The address of the sender is used if this is not set.</td></tr><tr><td><code>--withdrawer-address</code></td><td>string</td><td><code>ASTRIA_GO_WITHDRAWER_ADDRESS</code></td><td>Set the withdrawer address to use for the bridge account. The address of the sender is used if this is not set.</td></tr></tbody></table><h2 id="sequencer-createaccount" tabindex="-1"><code>sequencer createaccount</code> <a class="header-anchor" href="#sequencer-createaccount" aria-label="Permalink to &quot;`sequencer createaccount`&quot;">​</a></h2><p>Create an account for the sequencer. The account will be used to sign transactions and blocks. The account will be created with a private key, public key, and address.</p><h3 id="usage-20" tabindex="-1">Usage <a class="header-anchor" href="#usage-20" aria-label="Permalink to &quot;Usage&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">astria-go</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sequencer</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> createaccount</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [flags]</span></span></code></pre></div><h3 id="flags-12" tabindex="-1">Flags <a class="header-anchor" href="#flags-12" aria-label="Permalink to &quot;Flags&quot;">​</a></h3><table tabindex="0"><thead><tr><th>Flag</th><th>Arg Type</th><th>Override Env Var</th><th>Description</th></tr></thead><tbody><tr><td><code>--insecure</code></td><td>bool</td><td><code>ASTRIA_GO_INSECURE</code></td><td>Print the account private key to terminal instead of storing securely.</td></tr><tr><td><code>--json</code></td><td>bool</td><td><code>ASTRIA_GO_JSON</code></td><td>Output the account information in JSON format.</td></tr><tr><td><code>--keyfile</code></td><td>bool</td><td><code>ASTRIA_GO_KEYFILE</code></td><td>Store the account private key in a keyfile.</td></tr><tr><td><code>--keyring</code></td><td>bool</td><td><code>ASTRIA_GO_KEYRING</code></td><td>Store the account private key in the system keyring.</td></tr></tbody></table><h2 id="sequencer-getkey" tabindex="-1"><code>sequencer getkey</code> <a class="header-anchor" href="#sequencer-getkey" aria-label="Permalink to &quot;`sequencer getkey`&quot;">​</a></h2><p>Get private key for an address in system keyring.</p><h3 id="usage-21" tabindex="-1">Usage <a class="header-anchor" href="#usage-21" aria-label="Permalink to &quot;Usage&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">astria-go</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sequencer</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> getkey</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [address] [flags]</span></span></code></pre></div><h2 id="sequencer-ibctransfer" tabindex="-1"><code>sequencer ibctransfer</code> <a class="header-anchor" href="#sequencer-ibctransfer" aria-label="Permalink to &quot;`sequencer ibctransfer`&quot;">​</a></h2><p>Ibc Transfer tokens from a sequencer account to another chain account.</p><h3 id="usage-22" tabindex="-1">Usage <a class="header-anchor" href="#usage-22" aria-label="Permalink to &quot;Usage&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  astria-go</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sequencer</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ibctransfer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [amount] [to] [src-channel] [--keyfile </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> --keyring-address </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> --privkey] [flags]</span></span></code></pre></div><h3 id="flags-13" tabindex="-1">Flags <a class="header-anchor" href="#flags-13" aria-label="Permalink to &quot;Flags&quot;">​</a></h3><table tabindex="0"><thead><tr><th>Flag</th><th>Arg Type</th><th>Override Env Var</th><th>Description</th></tr></thead><tbody><tr><td><code>--asset</code></td><td>string</td><td><code>ASTRIA_GO_ASSET_ID</code></td><td>The asset id of the asset we want to bridge (default &quot;transfer/channel-0/utia&quot;)</td></tr><tr><td><code>--async</code></td><td>bool</td><td><code>ASTRIA_GO_ASYNC</code></td><td>If true, the function will return immediately. If false, the function will wait for the transaction to be seen on the network.</td></tr><tr><td><code>--fee-asset</code></td><td>string</td><td><code>ASTRIA_GO_FEE_ASSET_ID</code></td><td>The fee asset id of the asset used for fees (default &quot;ntia&quot;)</td></tr><tr><td><code>--json</code></td><td>bool</td><td><code>ASTRIA_GO_JSON</code></td><td>Output bridge account as JSON</td></tr><tr><td><code>--keyfile</code></td><td>string</td><td><code>ASTRIA_GO_KEYFILE</code></td><td>Path to secure keyfile for the bridge account.</td></tr><tr><td><code>--keyring-address</code></td><td>string</td><td><code>ASTRIA_GO_KEYRING_ADDRESS</code></td><td>The address of the bridge account. Requires private key be stored in keyring.</td></tr><tr><td><code>--network</code></td><td>string</td><td><code>ASTRIA_GO_NETWORK</code></td><td>Configure the values to target a specific network. (default &quot;dawn&quot;)</td></tr><tr><td><code>--privkey</code></td><td>string</td><td><code>ASTRIA_GO_PRIVKEY</code></td><td>The private key of the bridge account.</td></tr><tr><td><code>-c</code>, <code>--sequencer-chain-id</code></td><td>string</td><td><code>ASTRIA_GO_SEQUENCER_CHAIN_ID</code></td><td>The chain ID of the sequencer. (default &quot;dawn-1&quot;)</td></tr><tr><td><code>-u</code>, <code>--sequencer-url</code></td><td>string</td><td><code>ASTRIA_GO_SEQUENCER_URL</code></td><td>The URL of the sequencer to init bridge account.</td></tr></tbody></table><h2 id="sequencer-nonce" tabindex="-1"><code>sequencer nonce</code> <a class="header-anchor" href="#sequencer-nonce" aria-label="Permalink to &quot;`sequencer nonce`&quot;">​</a></h2><p>Retrieves and prints the nonce of an account.</p><h3 id="usage-23" tabindex="-1">Usage <a class="header-anchor" href="#usage-23" aria-label="Permalink to &quot;Usage&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">astria-go</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sequencer</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nonce</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [address] [flags]</span></span></code></pre></div><h3 id="flags-14" tabindex="-1">Flags <a class="header-anchor" href="#flags-14" aria-label="Permalink to &quot;Flags&quot;">​</a></h3><table tabindex="0"><thead><tr><th>Flag</th><th>Arg Type</th><th>Override Env Var</th><th>Description</th></tr></thead><tbody><tr><td><code>--json</code></td><td>bool</td><td><code>ASTRIA_GO_JSON</code></td><td>Output in JSON format.</td></tr><tr><td><code>--network</code></td><td>string</td><td><code>ASTRIA_GO_NETWORK</code></td><td>Configure the values to target a specific network. (default &quot;dawn&quot;)</td></tr><tr><td><code>-u</code>, <code>--sequencer-url</code></td><td>string</td><td><code>ASTRIA_GO_SEQUENCER_URL</code></td><td>The URL of the sequencer.</td></tr></tbody></table><h2 id="sequencer-setkey" tabindex="-1"><code>sequencer setkey</code> <a class="header-anchor" href="#sequencer-setkey" aria-label="Permalink to &quot;`sequencer setkey`&quot;">​</a></h2><p>Set private key for an address in system keyring.</p><h3 id="usage-24" tabindex="-1">Usage <a class="header-anchor" href="#usage-24" aria-label="Permalink to &quot;Usage&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">astria-go</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sequencer</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> setkey</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [address] [private key] [flags]</span></span></code></pre></div><h2 id="sequencer-transfer" tabindex="-1"><code>sequencer transfer</code> <a class="header-anchor" href="#sequencer-transfer" aria-label="Permalink to &quot;`sequencer transfer`&quot;">​</a></h2><p>Transfer tokens from one account to another.</p><h3 id="usage-25" tabindex="-1">Usage <a class="header-anchor" href="#usage-25" aria-label="Permalink to &quot;Usage&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">astria-go</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sequencer</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> transfer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [amount] [to] [flags]</span></span></code></pre></div><h3 id="flags-15" tabindex="-1">Flags <a class="header-anchor" href="#flags-15" aria-label="Permalink to &quot;Flags&quot;">​</a></h3><table tabindex="0"><thead><tr><th>Flag</th><th>Arg Type</th><th>Override Env Var</th><th>Description</th></tr></thead><tbody><tr><td><code>--asset</code></td><td>string</td><td><code>ASTRIA_GO_ASSET_ID</code></td><td>The asset id of the asset we want to bridge (default &quot;transfer/channel-0/utia&quot;)</td></tr><tr><td><code>--async</code></td><td>bool</td><td><code>ASTRIA_GO_ASYNC</code></td><td>If true, the function will return immediately. If false, the function will wait for the transaction to be seen on the network.</td></tr><tr><td><code>--fee-asset</code></td><td>string</td><td><code>ASTRIA_GO_FEE_ASSET_ID</code></td><td>The fee asset id of the asset used for fees (default &quot;ntia&quot;)</td></tr><tr><td><code>--json</code></td><td>bool</td><td><code>ASTRIA_GO_JSON</code></td><td>Output bridge account as JSON</td></tr><tr><td><code>--keyfile</code></td><td>string</td><td><code>ASTRIA_GO_KEYFILE</code></td><td>Path to secure keyfile for the bridge account.</td></tr><tr><td><code>--keyring-address</code></td><td>string</td><td><code>ASTRIA_GO_KEYRING_ADDRESS</code></td><td>The address of the bridge account. Requires private key be stored in keyring.</td></tr><tr><td><code>--network</code></td><td>string</td><td><code>ASTRIA_GO_NETWORK</code></td><td>Configure the values to target a specific network. (default &quot;dawn&quot;)</td></tr><tr><td><code>--privkey</code></td><td>string</td><td><code>ASTRIA_GO_PRIVKEY</code></td><td>The private key of the bridge account.</td></tr><tr><td><code>-c</code>, <code>--sequencer-chain-id</code></td><td>string</td><td><code>ASTRIA_GO_SEQUENCER_CHAIN_ID</code></td><td>The chain ID of the sequencer. (default &quot;dawn-1&quot;)</td></tr><tr><td><code>-u</code>, <code>--sequencer-url</code></td><td>string</td><td><code>ASTRIA_GO_SEQUENCER_URL</code></td><td>The URL of the sequencer to init bridge account.</td></tr></tbody></table>',140)]))}const p=t(i,[["render",o]]);export{u as __pageData,p as default};
